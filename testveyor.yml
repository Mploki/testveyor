# Notes:
#   - Minimal appveyor.yml file is an empty file. All sections are optional.
#   - Indent each level of configuration with 2 spaces. Do not use tabs!
#   - All section names are case-sensitive.
#   - Section names should be unique on each level.

#---------------------------------#
#      general configuration      #
#---------------------------------#

# version format
version: 1.0.{build}

# you can use {branch} name in version format too
# version: 1.0.{build}-{branch}
# Do not build on tags (GitHub only)

#---------------------------------#
#    environment configuration    #
#---------------------------------#

# scripts that are called at very beginning, before repo cloning
init:
  - git config --global core.autocrlf input

# clone directory
clone_folder: c:\projects\myproject

# fetch repository as zip archive
shallow_clone: true                 # default is "false"

# set clone depth
clone_depth: 10                      # clone entire repository history if not defined

# setting up etc\hosts file
hosts:
  queue-server: 127.0.0.1
  db.server.com: 127.0.0.2

# environment variables
environment:
  my_var1: value1
  my_var2: value2
  # this is how to set encrypted variable. Go to "Encrypt data" page in account menu to encrypt data.

# environment:
#  global:
#    connection_string: server=12;password=13;
#    service_url: https://127.0.0.1:8090
#
#  matrix:
#  - db: mysql
#    provider: mysql
#
#  - db: mssql
#    provider: mssql
#    password:
#      secure: $#(JFDA)jQ@#$

# this is how to allow failing jobs in the matrix
matrix:
  fast_finish: true     # set this flag to immediately finish build once one of the jobs fails.
  allow_failures:
    - platform: x86
      configuration: Debug
    - platform: x64
      configuration: Release

# build cache to preserve files/folders between builds
cache:
  - packages -> **\packages.config  # preserve "packages" directory in the root of build folder but will reset it if packages.config is modified
  - projectA\libs
  - node_modules                    # local npm modules
  - %APPDATA%\npm-cache             # npm cache

# enable service required for build/tests
#services:
#  - mssql2014           start SQL Server 2014 Express
#  - mssql2014rs         start SQL Server 2014 Express and Reporting Services
#  - mssql2012sp1        start SQL Server 2012 SP1 Express
#  - mssql2012sp1rs      start SQL Server 2012 SP1 Express and Reporting Services
#  - mssql2008r2sp2      start SQL Server 2008 R2 SP2 Express
#  - mssql2008r2sp2rs    start SQL Server 2008 R2 SP2 Express and Reporting Services
#  - mysql               start MySQL 5.6 service
#  - postgresql          start PostgreSQL 9.3 service
#  - iis                 start IIS
#  - msmq                start Queuing services

# scripts that run after cloning repository
install:
  # by default, all script lines are interpreted as batch
  - echo This is batch
  # to run script as a PowerShell command prepend it with ps:
  - ps: Write-Host 'This is PowerShell'
  # batch commands start from cmd:
  - cmd: echo This is batch again
  - cmd: set MY_VAR=12345

# enable patching of AssemblyInfo.* files
assembly_info:
  patch: true
  file: AssemblyInfo.*
  assembly_version: "2.2.{build}"
  assembly_file_version: "{version}"
  assembly_informational_version: "{version}"

#---------------------------------#
#       build configuration       #
#---------------------------------#

# build platform, i.e. x86, x64, Any CPU. This setting is optional.
platform: Any CPU

# to add several platforms to build matrix:
#platform:
#  - x86
#  - Any CPU

# build Configuration, i.e. Debug, Release, etc.
configuration: Release

# to add several configurations to build matrix:
#configuration:
#  - Debug
#  - Release

build:
  parallel: true                  # enable MSBuild parallel builds
  project: MyTestAzureCS.sln      # path to Visual Studio solution or project
  publish_wap: true               # package Web Application Projects (WAP) for Web Deploy
  publish_wap_xcopy: true         # package Web Application Projects (WAP) for XCopy deployment
  publish_azure: true             # package Azure Cloud Service projects and push to artifacts
  publish_nuget: true             # package projects with .nuspec files and push to artifacts
  publish_nuget_symbols: true     # generate and publish NuGet symbol packages
  include_nuget_references: true  # add -IncludeReferencedProjects option while packaging NuGet artifacts

  # MSBuild verbosity level
  verbosity: quiet|minimal|normal|detailed


# scripts to run before build
before_build:

# scripts to run after build
after_build:

# to run your custom scripts instead of automatic MSBuild
build_script:

# to disable automatic builds
#build: off
#
#----------------------------------#
#            Deployment            #
#----------------------------------#
deploy:
  release: myproduct-v$(appveyor_build_version)
  description: 'Dependancies builder'
  provider: GitHub
  auth_token:
    secure: htfvcn20yb5mx5vgo3wm   # your encrypted token from GitHub
  artifact: /.*\.nupkg/            # upload all NuGet packages to release assets
  draft: false
  prerelease: false
  on:
    branch: master                 # release from master branch only
    appveyor_repo_tag: true        # deploy on tag push only
#---------------------------------#
#      artifacts configuration    #
#---------------------------------#

artifacts:

  # pushing a single file
  - path: test.zip

  # pushing a single file with environment variable in path and "Deployment name" specified
  - path: MyProject\bin\$(configuration)
    name: myapp

  # pushing entire folder as a zip archive
  - path: logs

  # pushing all *.nupkg files in directory
  - path: out\*.nupkg

#---------------------------------#
#        global handlers          #
#---------------------------------#

# on successful build
on_success:
  - do something

# on build failure
on_failure:
  - do something

# after build failure or success
on_finish:
  - do something
